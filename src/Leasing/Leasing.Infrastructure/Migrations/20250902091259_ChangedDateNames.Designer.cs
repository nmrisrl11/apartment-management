// <auto-generated />
using System;
using Leasing.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Leasing.Infrastructure.Migrations
{
    [DbContext(typeof(LeasingDbContext))]
    [Migration("20250902091259_ChangedDateNames")]
    partial class ChangedDateNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Leasing")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Leasing.Domain.Entities.Apartment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApartmentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessorId");

                    b.ToTable("Apartments", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.LeasingAgreement", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCommenced")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateExpiry")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LesseeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("LesseeId");

                    b.HasIndex("LessorId");

                    b.ToTable("LeasingAgreements", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.LeasingRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCommenced")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateExpiry")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LesseeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("LesseeId");

                    b.HasIndex("LessorId");

                    b.ToTable("LeasingRecords", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Lessee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lessees", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Lessor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lessors", "Leasing");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Apartment", b =>
                {
                    b.HasOne("Leasing.Domain.Entities.Lessor", "Lessor")
                        .WithMany()
                        .HasForeignKey("LessorId");

                    b.Navigation("Lessor");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.LeasingAgreement", b =>
                {
                    b.HasOne("Leasing.Domain.Entities.Apartment", "Apartment")
                        .WithMany()
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Leasing.Domain.Entities.Lessee", "Lessee")
                        .WithMany()
                        .HasForeignKey("LesseeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Leasing.Domain.Entities.Lessor", "Lessor")
                        .WithMany()
                        .HasForeignKey("LessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Lessee");

                    b.Navigation("Lessor");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.LeasingRecord", b =>
                {
                    b.HasOne("Leasing.Domain.Entities.Apartment", "Apartment")
                        .WithMany("LeasingHistory")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Leasing.Domain.Entities.Lessee", "Lessee")
                        .WithMany("LeasingHistory")
                        .HasForeignKey("LesseeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Leasing.Domain.Entities.Lessor", "Lessor")
                        .WithMany()
                        .HasForeignKey("LessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Lessee");

                    b.Navigation("Lessor");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Apartment", b =>
                {
                    b.Navigation("LeasingHistory");
                });

            modelBuilder.Entity("Leasing.Domain.Entities.Lessee", b =>
                {
                    b.Navigation("LeasingHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
